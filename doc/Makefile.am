################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
# Default target
all-local: doc

# Public programs ("main" tags in project.xml), auto-regenerated:
MAN1 = lpclient.1 lpserver.1 printerrno.1 hwserver.1 hwclient.1 version.1 wuserver.1 wuclient.1 tasksink.1 taskvent.1 taskwork.1 msreader.1 mspoller.1 rrclient.1 rrworker.1 rrbroker.1 msgqueue.1 wuproxy.1
# Public classes ("class" tags in project.xml), auto-regenerated:
MAN3 = common.3
# Project overview, written by a human after initial skeleton:
# NOTE: stub doc/czguide.adoc is generated by GSL from project.xml
#       and then comitted to SCM and maintained manually to describe the
#       project (section 7 = Overview, conventions, and miscellaneous).
MAN7 = czguide.7
MAN_DOC = $(MAN1) $(MAN3) $(MAN7)

# Assumption: the single .7 page only covers the project and is maintained
# manually. The SCM-tracked text source file name uses an .adoc extension
# so as not to conflict with generated .txt files (in cases when a "class"
# or a "main" name is same as overall project name).
MAN_TXT = $(MAN7:%.7=%.adoc)

EXTRA_DIST = asciidoc.conf mkman

if INSTALL_MAN
dist_man_MANS = $(MAN_DOC)
endif

if BUILD_DOC
MAN_TXT += $(MAN1:%.1=%.txt)
MAN_TXT += $(MAN3:%.3=%.txt)

DISTCLEANFILES = $(MAN_DOC)

dist-hook : $(MAN_DOC)

SUFFIXES=.txt .adoc .xml .xml7 .1 .3 .7

.txt.xml:
	asciidoc -d manpage -b docbook -f $(srcdir)/asciidoc.conf \
        -aczguide_version=@PACKAGE_VERSION@ -o$@ $<
.xml.1:
	xmlto man $<
.xml.3:
	xmlto man $<

# Special handling for project overview whose basename may collide
# with a main or class name
.adoc.xml7:
	asciidoc -d manpage -b docbook -f $(srcdir)/asciidoc.conf \
        -aczguide_version=@PACKAGE_VERSION@ -o$@ $<
.xml7.7:
	xmlto man $<

# List of *.txt and *.doc files generated during build from comments
# in project program source files and further processed into manpages.
GENERATED_DOCS =

# No-op, docs and texts are generated by mkman in one shot - just
# make a dependency that can not parallelize and break stuff.
# Also, to be validly processed, the dependency must have SOME payload
.txt.doc:
	@true

GENERATED_DOCS += common.txt common.doc
common.txt: $(top_srcdir)/src/common.c
	"$(srcdir)/mkman" "common" "$(builddir)/common.txt" "$(srcdir)/.."

GENERATED_DOCS += lpclient.txt lpclient.doc
lpclient.txt: $(top_srcdir)/src/lpclient.c
	"$(srcdir)/mkman" "lpclient" "$(builddir)/lpclient.txt" "$(srcdir)/.."

GENERATED_DOCS += lpserver.txt lpserver.doc
lpserver.txt: $(top_srcdir)/src/lpserver.c
	"$(srcdir)/mkman" "lpserver" "$(builddir)/lpserver.txt" "$(srcdir)/.."

GENERATED_DOCS += printerrno.txt printerrno.doc
printerrno.txt: $(top_srcdir)/src/printerrno.c
	"$(srcdir)/mkman" "printerrno" "$(builddir)/printerrno.txt" "$(srcdir)/.."

GENERATED_DOCS += hwserver.txt hwserver.doc
hwserver.txt: $(top_srcdir)/src/hwserver.c
	"$(srcdir)/mkman" "hwserver" "$(builddir)/hwserver.txt" "$(srcdir)/.."

GENERATED_DOCS += hwclient.txt hwclient.doc
hwclient.txt: $(top_srcdir)/src/hwclient.c
	"$(srcdir)/mkman" "hwclient" "$(builddir)/hwclient.txt" "$(srcdir)/.."

GENERATED_DOCS += version.txt version.doc
version.txt: $(top_srcdir)/src/version.c
	"$(srcdir)/mkman" "version" "$(builddir)/version.txt" "$(srcdir)/.."

GENERATED_DOCS += wuserver.txt wuserver.doc
wuserver.txt: $(top_srcdir)/src/wuserver.c
	"$(srcdir)/mkman" "wuserver" "$(builddir)/wuserver.txt" "$(srcdir)/.."

GENERATED_DOCS += wuclient.txt wuclient.doc
wuclient.txt: $(top_srcdir)/src/wuclient.c
	"$(srcdir)/mkman" "wuclient" "$(builddir)/wuclient.txt" "$(srcdir)/.."

GENERATED_DOCS += tasksink.txt tasksink.doc
tasksink.txt: $(top_srcdir)/src/tasksink.c
	"$(srcdir)/mkman" "tasksink" "$(builddir)/tasksink.txt" "$(srcdir)/.."

GENERATED_DOCS += taskvent.txt taskvent.doc
taskvent.txt: $(top_srcdir)/src/taskvent.c
	"$(srcdir)/mkman" "taskvent" "$(builddir)/taskvent.txt" "$(srcdir)/.."

GENERATED_DOCS += taskwork.txt taskwork.doc
taskwork.txt: $(top_srcdir)/src/taskwork.c
	"$(srcdir)/mkman" "taskwork" "$(builddir)/taskwork.txt" "$(srcdir)/.."

GENERATED_DOCS += msreader.txt msreader.doc
msreader.txt: $(top_srcdir)/src/msreader.c
	"$(srcdir)/mkman" "msreader" "$(builddir)/msreader.txt" "$(srcdir)/.."

GENERATED_DOCS += mspoller.txt mspoller.doc
mspoller.txt: $(top_srcdir)/src/mspoller.c
	"$(srcdir)/mkman" "mspoller" "$(builddir)/mspoller.txt" "$(srcdir)/.."

GENERATED_DOCS += rrclient.txt rrclient.doc
rrclient.txt: $(top_srcdir)/src/rrclient.c
	"$(srcdir)/mkman" "rrclient" "$(builddir)/rrclient.txt" "$(srcdir)/.."

GENERATED_DOCS += rrworker.txt rrworker.doc
rrworker.txt: $(top_srcdir)/src/rrworker.c
	"$(srcdir)/mkman" "rrworker" "$(builddir)/rrworker.txt" "$(srcdir)/.."

GENERATED_DOCS += rrbroker.txt rrbroker.doc
rrbroker.txt: $(top_srcdir)/src/rrbroker.c
	"$(srcdir)/mkman" "rrbroker" "$(builddir)/rrbroker.txt" "$(srcdir)/.."

GENERATED_DOCS += msgqueue.txt msgqueue.doc
msgqueue.txt: $(top_srcdir)/src/msgqueue.c
	"$(srcdir)/mkman" "msgqueue" "$(builddir)/msgqueue.txt" "$(srcdir)/.."

GENERATED_DOCS += wuproxy.txt wuproxy.doc
wuproxy.txt: $(top_srcdir)/src/wuproxy.c
	"$(srcdir)/mkman" "wuproxy" "$(builddir)/wuproxy.txt" "$(srcdir)/.."


clean-local:
	rm -f *.1 *.3 *.7 $(GENERATED_DOCS)

doc: $(GENERATED_DOCS)

else
doc:
	@echo "SKIPPING documentation generation and formatting (BUILD_DOC was not required and/or tools are missing)" >&2
endif

EXTRA_DIST += $(MAN_TXT)
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
